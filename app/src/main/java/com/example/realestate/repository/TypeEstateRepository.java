package com.example.realestate.repository;import android.app.Application;import android.os.AsyncTask;import androidx.lifecycle.LiveData;import com.example.realestate.model.dao.OfficeDao;import com.example.realestate.model.dao.TypeEstateDao;import com.example.realestate.model.database.RealEstateDateBase;import com.example.realestate.model.entity.Office;import com.example.realestate.model.entity.TypeEstate;import java.util.List;public class TypeEstateRepository {    private TypeEstateDao typeEstateDao;    public TypeEstateRepository(Application application) {        typeEstateDao = RealEstateDateBase.getDatabase( application ).getTypeEstateDao();    }    public void insert(TypeEstate typeEstate) {        new InsertTask( typeEstateDao ).execute( typeEstate );    }    public void delete(TypeEstate typeEstate) {        new DeleteTask( typeEstateDao ).execute( typeEstate );    }    public void update(TypeEstate typeEstate) {        new UpdateTask( typeEstateDao ).execute( typeEstate );    }    public LiveData<List<TypeEstate>> getAllTypeEstate() {        return typeEstateDao.getAllTypeEstate();    }    private static class InsertTask extends AsyncTask<TypeEstate, Void, Void> {        private TypeEstateDao typeEstateDao;        public InsertTask(TypeEstateDao typeEstateDao) {            this.typeEstateDao = typeEstateDao;        }        @Override        protected Void doInBackground(TypeEstate... typeEstates) {            typeEstateDao.insert( typeEstates[0] );            return null;        }    }    private static class DeleteTask extends AsyncTask<TypeEstate, Void, Void> {        private TypeEstateDao typeEstateDao;        public DeleteTask(TypeEstateDao typeEstateDao) {            this.typeEstateDao = typeEstateDao;        }        @Override        protected Void doInBackground(TypeEstate... typeEstates) {            typeEstateDao.delete( typeEstates[0] );            return null;        }    }    private static class UpdateTask extends AsyncTask<TypeEstate, Void, Void> {        private TypeEstateDao typeEstateDao;        public UpdateTask(TypeEstateDao typeEstateDao) {            this.typeEstateDao = typeEstateDao;        }        @Override        protected Void doInBackground(TypeEstate... typeEstates) {            typeEstateDao.update( typeEstates[0] );            return null;        }    }}