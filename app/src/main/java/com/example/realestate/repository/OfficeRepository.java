package com.example.realestate.repository;import android.app.Application;import android.os.AsyncTask;import androidx.lifecycle.LiveData;import com.example.realestate.model.dao.OfficeDao;import com.example.realestate.model.database.RealEstateDateBase;import com.example.realestate.model.entity.Office;import java.util.List;public class OfficeRepository {    private OfficeDao officeDao;    public OfficeRepository(Application application) {        officeDao = RealEstateDateBase.getDatabase( application ).getOfficeDao();    }    public void insert(Office office) {        new InsertTask( officeDao ).execute( office );    }    public void delete(Office office) {        new DeleteTask( officeDao ).execute( office );    }    public void update(Office office) {        new UpdateTask( officeDao ).execute( office );    }    public LiveData<List<Office>> getAllOffice() {        return officeDao.getAllOffice();    }    public LiveData<Office> getofficeByNumberPhone(String numberPhoen) {        return officeDao.getOfficeByNumberPhobe( numberPhoen );    }    private static class InsertTask extends AsyncTask<Office, Void, Void> {        private OfficeDao officeDao;        public InsertTask(OfficeDao officeDao) {            this.officeDao = officeDao;        }        @Override        protected Void doInBackground(Office... offices) {            officeDao.insert( offices[0] );            return null;        }    }    private static class DeleteTask extends AsyncTask<Office, Void, Void> {        private OfficeDao officeDao;        public DeleteTask(OfficeDao officeDao) {            this.officeDao = officeDao;        }        @Override        protected Void doInBackground(Office... offices) {            officeDao.delete( offices[0] );            return null;        }    }    private static class UpdateTask extends AsyncTask<Office, Void, Void> {        private OfficeDao officeDao;        public UpdateTask(OfficeDao officeDao) {            this.officeDao = officeDao;        }        @Override        protected Void doInBackground(Office... offices) {            officeDao.update( offices[0] );            return null;        }    }}